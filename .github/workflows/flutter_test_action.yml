name: Flutter CI

# Trigger the workflow on push and pull request events
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - development
      - master

jobs:
  test:
    runs-on: ubuntu-latest  # You can also use macos-latest or windows-latest if needed

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.4'  # Specify Flutter 3.24.4 for consistency

      # Step 3: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 4: Run build_runner to generate mocks
      - name: Generate mocks
        run: flutter pub run build_runner build --delete-conflicting-outputs

      # Step 5: Run unit tests
      - name: Run unit tests
        run: flutter test

      # Step 6: Build APK
      - name: Build APK
        run: flutter build apk --release

      # Step 7: Cache Flutter dependencies (optional)
      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # Step 8: Install Firebase CLI
      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      # Step 9: Set up Google Cloud credentials using the Firebase service account key
      - name: Set up Google Cloud credentials
        run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > $HOME/.config/gcloud/application_default_credentials.json

      # Step 10: Upload APK to Firebase App Distribution
      - name: Upload APK to Firebase App Distribution
        run: firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
          --app "1:941362651057:android:6d3808a23b1f9afd412790" \
          --groups "testers"  # Specify your testers' group name in Firebase
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
